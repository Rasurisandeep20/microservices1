package com.dnb.accountservice.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.dnb.accountservice.dto.Account;
import com.dnb.accountservice.exception.IdNotFoundException;
import com.dnb.accountservice.repo.AccountRepository;

@Service("accountServiceImpl")
public class AccountServiceImpl implements AccountService {

	@Autowired // type, name
//	@Qualifier("accountRespository2Impl")
	private AccountRepository accountRepository;

	@Override
	public Account createAccount(Account account) throws IdNotFoundException {
	
			return accountRepository.save(account);

	}

	@Override
	public Optional<Account> getAccountById(String accountId) {
		// TODO Auto-generated method stub
		return accountRepository.findById(accountId);
	}

	public boolean deleteAccountByID(String accountId) throws IdNotFoundException {

		// TODO Auto-generated method stub

		boolean isPresent = accountRepository.existsById(accountId);

		if (isPresent) {

			accountRepository.deleteById(accountId);

		} else {

			throw new IdNotFoundException("Id not Found");

		}

		if (accountRepository.existsById(accountId))

			return false;

		else

			return true;

	}

	public Iterable<Account> getAllAccounts() {
		return accountRepository.findAll();
	}

	@Override

	public boolean checkAccountId(String accountId) {

		if (accountRepository.existsById(accountId))

			return true;

		else

			return false;
	}

	@Override

	public List<Account> getAccountByContactNumber(String contactNumber) {

		// TODO Auto-generated method stub

		return accountRepository.findByContactNumber(contactNumber);

	}

}